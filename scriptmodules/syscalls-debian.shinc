#!/bin/bash
#
# RetroRig Debian syscall module
# This module converts the abstract syscall variable wrappers into
# Distro-specific actions. This avoids having to write insane
# amounts of if-statements and lengthening the code even more.
#
# Please report any errors via a pull request
# You can also reach me on twitter: @N3RD42
#
# prepare folder structure for emulator, cores, front end, and roms

######################################################
# System only
######################################################

cmd_reboot="reboot"

######################################################
# Packaging
######################################################

cmd_install_pkg="apt-get install -y"
cmd_remove_pkg="apt-get remove -y"
cmd_autoremove_pkg="apt-get autoremove -y"
cmd_query_pkg="dpkg-query -s"
cmd_hold_pkg="apt-mark hold"
cmd_unhold_pkg="apt-mark unhold"
cmd_update_system="apt-get update -y"
cmd_upgrade_system="apt-get upgrade -y"
cmd_add_repo="add-apt-repository -y"
cmd_remove_repo="add-apt-repository --remove -y"
cmd_manual_pkg_install="dpkg -i"

######################################################
# Init
######################################################
# update rescan init
# set based on init system
	
if [[ "$init_system" == "systemd" ]]; then

	update_init_rescan="sudo systemctl enable rescan"
  update_init_xboxdrv="sudo systemctl enable xboxdrv"
  xboxdrv_init="xboxdrv"
  xboxdrv_defaults="/etc/default/xboxdrv"
	
elif [[ "$init_system" == "upstart" ]]; then

  update_init_rescan="update-rc.d rescan defaults"
  update_init_xboxdrv="update-rc.d xboxdrv defaults"
  xboxdrv_init="/etc/init.d/xboxdrv"
  xboxdrv_defaults="/etc/default/xboxdrv"

else

  update_init_rescan="update-rc.d rescan defaults"
  update_init_xboxdrv="update-rc.d xboxdrv defaults"
  xboxdrv_init="/etc/init.d/xboxdrv"
  xboxdrv_defaults="/etc/default/xboxdrv"
  
fi

# blacklist xpad
cp -v "$scriptdir/init-scripts/ps3_usb_controller/blacklist.conf" "/etc/modprobe.d/"

######################################################
# Kernel
######################################################

linux_headers_deb="http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.14-trusty/linux-headers-3.14.0-031400_3.14.0-031400.201403310035_all.deb"

linux_headers="http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.14-trusty/linux-headers-3.14.0-031400-generic_3.14.0-031400.201403310035_amd64.deb"

linux_image="http://kernel.ubuntu.com/~kernel-ppa/mainline/v3.14-trusty/linux-image-3.14.0-031400-generic_3.14.0-031400.201403310035_amd64.deb"

######################################################
# Services
######################################################

# set based on init system

if [[ "$init_system" == "systemd" ]]; then
  # sixad
  cmd_sixad_start="systemctl start sixad"
  cmd_sixad_restart="systemctl restart sixad"
  cmd_sixad_stop="systemctl restart sixad"
  cmd_remove_sixad="systemctl disable sixad"
  
  #rescan
  cmd_rescan_start="systemctl start rescan"
  cmd_rescan_restart="systemctl restart rescan"
  cmd_rescan_stop="systemctl restart rescan"
  cmd_remove_rescan="systemctl disable rescan"
  
  # xboxdrv
  cmd_xboxdrv_start="systemctl start xboxdrv"
  cmd_xboxdrv_restart="systemctl restart xboxdrv"
  cmd_xboxdrv_stop="systemctl restart xboxdrv"
  cmd_remove_xboxdrv="systemctl disable xboxdrv"
  
  # samba
  cmd_samba_start="systemctl start samba"
  cmd_samba_restart="systemctl restart samba"
  cmd_samba_stop="systemctl restart samba"
  cmd_remove_samba="systemctl disable samba"
  
  # ssh
  cmd_ssh_start="systemctl start ssh"
  cmd_ssh_restart="systemctl restart ssh"
  cmd_ssh_stop="systemctl restart ssh"
  cmd_remove_ssh="systemctl disable ssh"
  
elif [[ "$init_system" == "upstart" ]]; then
  # sixad
  cmd_sixad_start="service sixad start"
  cmd_sixad_restart="service sixad restart"
  cmd_sixad_stop="service sixad stop"
  cmd_remove_sixad="update-rc.d -f sixad remove"
  
  #rescan
  cmd_rescan_start="service rescan start"
  cmd_rescan_restart="service rescan restart"
  cmd_rescan_stop="service rescan stop"
  cmd_remove_rescan="update-rc.d -f rescan remove"
  
  # xboxdrv
  cmd_xboxdrv_start="service xboxdrv start"
  cmd_xboxdrv_restart="service xboxdrv restart"
  cmd_xboxdrv_stop="service xboxdrv stop"
  cmd_remove_xboxdrv="update-rc.d -f xboxdrv remove"
  
  # samba
  cmd_samba_start="service samba start"
  cmd_samba_restart="service samba restart"
  cmd_samba_stop="service samba stop"
  
  # ssh
  cmd_ssh_start="service ssh start"
  cmd_ssh_restart="service ssh restart"
  cmd_ssh_stop="service ssh stop"
else

  # sixad
  cmd_sixad_start="service sixad start"
  cmd_sixad_restart="service sixad restart"
  cmd_sixad_stop="service sixad stop"
  cmd_remove_sixad="update-rc.d -f sixad remove"
  
  #rescan
  cmd_rescan_start="service rescan start"
  cmd_rescan_restart="service rescan restart"
  cmd_rescan_stop="service rescan stop"
  cmd_remove_rescan="update-rc.d -f rescan remove"
  
  # xboxdrv
  cmd_xboxdrv_start="service xboxdrv start"
  cmd_xboxdrv_restart="service xboxdrv restart"
  cmd_xboxdrv_stop="service xboxdrv stop"
  cmd_remove_xboxdrv="update-rc.d -f xboxdrv remove"
  
  # samba
  cmd_samba_start="service samba start"
  cmd_samba_restart="service samba restart"
  cmd_samba_stop="service samba stop"
  
  # ssh
  cmd_ssh_start="service ssh start"
  cmd_ssh_restart="service ssh restart"
  cmd_ssh_stop="service ssh stop"
fi

######################################################
# Various
######################################################

cmd_add_32bit_arch="dpkg --add-architecture i386"
cmd_remove_32bit_arch="dpkg --remove-architecture i386"

######################################################
# Applications
######################################################

# Populate any applications, whose path differs from the 
# typical norm on the base targe Ubuntu.
