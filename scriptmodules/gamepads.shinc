#!/bin/bash
#
# RetroRig menu modules
# This is a small script to copy over configuration files for emulators
# append a "-x" on the end above for debugging if need be
# Please report any errors via a pull request
# You can also reach me on twitter: @N3RD42
#

function gp_common()
{
	############################################################
	# Purpose: add files common to add gamepad configurations
	############################################################

	# offline artwork scrapper configs
	cp -v "$scriptdir/common/parserConfig.xml" "$rootdir/Artwork/MAME/"
	cp -v "$scriptdir/common/MAME.txt" "$rootdir/Artwork/MAME/"
	cp -v "$scriptdir/common/MAME synopsis RCB 201202.zip" "$rootdir/Artwork/MAME/"

}

function gp_ps3_blu()
{

	####################################################################
	# Function Description:
	# 
	# This function serves to copy the default emulator configurations
	# for the PS3 Controller over bluetooth
	####################################################################

	# clean any old configs
	h_clean_gamepad

	# copy over default cfgs for ES:
	cp -v "$scriptdir/es-cfgs/es_systems.cfg" "$es_home"
	cp -v "$scriptdir/es-cfgs/es_settings.cfg" "$es_home"

	# Copy default ES input file
	cp "$scriptdir/gamepad-cfgs/ps3_blu_controller/es_input.cfg" "$es_home"

	# mame
	# default path: /home/$USER/.mame
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MAME/default.cfg" "$config_home/.mame/cfg/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MAME/mame.ini" "$config_home/.mame/"
 
	# mess
	# default path: /home/$USER/.retrorig/.mess
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MESS/mess.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MESS/aes.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MESS/neocdz.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MESS/default.cfg" "$config_home/.mess/cfg/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MESS/neocdz.cfg" "$config_home/.mess/cfg/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MESS/aes.cfg" "$config_home/.mess/cfg/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/MESS/default.cfg" "$config_home/.mess/cfg/"

	# mednafen
	# default path: /home/$USER/.retrorig/.mednafen
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/mednafen/mednafen-09x.cfg" "$config_home/.mednafen/"

	# mupen64plus
	# default path: /home/$USER/.retrorig/.config/mupen64plus
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/mupen64plus/mupen64plus.cfg" "$config_home/.config/mupen64plus/"

	# Dolphin (GameCube/Wii)
	# default path: /home/$USER/.retrorig/.dolphin-emu/Wii/
	# default path: /home/$USER/.retrorig/.dolphin-emu/GC/
	## GC config ##
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/Dolphin/GC/GCPadNew.ini" "$config_home/.dolphin-emu/GC/Config/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/Dolphin/GC/Dolphin.ini" "$config_home/.dolphin-emu/GC/Config/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/Dolphin/GC/WiimoteNew.ini" "$config_home/.dolphin-emu/GC/Config/"
	## Wii config ##
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/Dolphin/Wii/GCPadNew.ini" "$config_home/.dolphin-emu/Wii/Config/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/Dolphin/Wii/Dolphin.ini" "$config_home/.dolphin-emu/Wii/Config/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/Dolphin/Wii/WiimoteNew.ini" "$config_home/.dolphin-emu/Wii/Config/"

	# PCSX2
	# base config folder
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PCSX2/inisOnePAD.ini" "$config_home/.config/pcsx2/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PCSX2/PCSX2-reg.ini" "$config_home/.config/pcsx2/"
	# inis
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PCSX2/inis/GSdx.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PCSX2/inis/OnePAD.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PCSX2/inis/PCSX2_ui.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PCSX2/inis/PCSX2_vm.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PCSX2/inis/spu2-x.ini" "$config_home/.config/pcsx2/inis/"

	# Stella
	# default path: /home/$USER/.config/mupen64plus
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/Stella/stellarc" "$config_home/.stella/"

	# PPSSPP
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PPSSPP/ppsspp.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/PPSSPP/controls.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"

	# Gens GS (Sega CD/32X)
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/GensGS/gens.cfg" "$config_home/.gens/"

	# copy over default cfgs for ES:
	cp -v "$scriptdir/es-cfgs/es_systems.cfg" "$es_home"
	cp -v "$scriptdir/es-cfgs/es_settings.cfg" "$es_home"

	# RetroArch
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/retroarch/retroarch.cfg" "$config_home/.config/retroarch/"
	cp -v "$scriptdir/emu-cfgs/ps3_blu_controller/retroarch/desmume_libretro.cfg" "$config_home/.config/retroarch/"

	# Alter Steam config.vdf with proper controls if controller exists
	STEAM_GP_TYPE="ps3blu"
	gp_steam_control

	###########################################################
	# Add emulator specifc control remaps here for qjoypad
	###########################################################
	# !!! Removed in favor of anitmicro since 0.9.5b !!!
	###########################################################

	# blacklist xpad
	cp -v "$scriptdir/init-scripts/ps3_blu_controller/blacklist.conf" "/etc/modprobe.d/"

	###############################################################################################
	# Add emulator specifc control remaps here for AniMicro
	###############################################################################################
	# set vars for pre/post command for the PPSSPP emulator in RCB
	# We need this unforuntely, since the SDL/sixad mapping are so screwy, we need ot use 
	# keyboard.Esc instead of a button press (PS button is an axis in sixad anyway).
	# It is very important that you preceed '&amp;' with a backslash to escape the '&' character
	# so it is properly replaced. RCB requires '&amp' over the literal '&'.s
	###############################################################################################

	# copy in profiles for emulators (antimicro)
	cp -v "$scriptdir/gamepad-cfgs/ps3_blu_controller/antimicro_settings.ini" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_blu_controller/am_pcsx2_ps3_blu.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_blu_controller/am_mednafen_gen_ps3_blu.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_blu_controller/am_mednafen_ps1_ps3_blu.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_blu_controller/am_ppsspp_ps3_blu.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_blu_controller/am_gensgs_ps3_blu.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_blu_controller/am_dolphin_ps3_blu.joystick.xml" "$config_home/.config/antimicro/"

	#####################
	# PCSX2
	#####################

	old_pre="ps2_pre"
	old_post="ps2_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_pcsx2_ps3_blu.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"
 

	#####################
	# PPSSPP
	#####################

	old_pre="psp_pre"
	old_post="psp_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_ppsspp_ps3_blu.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"	
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	#####################
	# Mednafen (PSX/PS1)
	#####################

	old_pre="ps1_pre"
	old_post="ps1_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_ps1_ps3_blu.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	#####################
	# Mednafen (general)
	#####################

	old_pre="med_gen_pre"
	old_post="med_gen_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_gen_ps3_blu.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	#########################
	# Dolphin (Gamecube/Wii)
	#########################

	old_pre="dolphin_pre"
	old_post="dolphin_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_dolphin_ps3_blu.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"


	################################
	# Gens GS (Sega CD/32X/Genesis)
	################################

	old_pre="gens_pre"
	old_post="gens_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_gensgs_ps3_blu.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	# The PS3 pairing process should be handled interactively in a seperate function:
	gp_ps3_blu_main

}


function gp_ps3_blu_main()
{

	####################################################################
	# Function Description:
	# 
	# This function serves as the "main screen" for PS3 controller 
	# setups
	####################################################################

	###########################################################
	# Start controller pairing process
	###########################################################

	# start sixad service for pairing process
        echo "starting services" | tee "$rootdir/logs/debug.log"
        echo "" | tee "$rootdir/logs/debug.log"
        # start service, but fork to background so when user exits script it is still running $
        $cmd_sixad_start | tee "$rootdir/logs/debug.log" &
        sleep 2s
        clear

	# Present small menu asking for number of controllers
	cmd=(dialog --backtitle "LibreGeek.org RetroRig Installer" \
		    --menu "Please select the number of PS3 controllers" 16 47 16)
	options=(1 "1"
	 	 2 "2"
	 	 3 "3"
	 	 4 "4")

	#make menu choice
	selection=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	#functions

	for choice in $selection
	do
		case $choice in

		1)
		
		# call pairing function to set current bluetooth MAC to Player 1
		n="1"
		ps3_pair_blu
		# Set up control assignments for emulators and ES control
		clear
		ps3_set_ctrl_assignments
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 1 Controller complete" 5 43 
		;;

		2)
		
		# call pairing function to set current bluetooth MAC to Player 1
		n="1"
		ps3_pair_blu
		# Set up control assignments for emulators and ES control
		clear
		ps3_set_ctrl_assignments
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 1 Controller complete" 5 43 
		
		# call pairing function to set current bluetooth MAC to Player 2
		n="2"
		ps3_pair_blu
		# Set up control assignments for emulators
		clear
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 2 Controller complete" 5 43
		;;

		3)

		# call pairing function to set current bluetooth MAC to Player 1
		n="1"
		ps3_pair_blu
		# Set up control assignments for emulators and ES control
		clear
		ps3_set_ctrl_assignments
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 1 Controller complete" 5 43
 
		# call pairing function to set current bluetooth MAC to Player 2
		n="2"
		ps3_pair_blu
		# Set up control assignments for emulators
		clear
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 2 Controller complete" 5 43

		# call pairing function to set current bluetooth MAC to Player 3
		n="3"
		ps3_pair_blu
		# Set up control assignments for emulators
		clear
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 3 Controller complete" 5 43  
		;;

		4)

		# call pairing function to set current bluetooth MAC to Player 1
		n="1"
		ps3_pair_blu
		# Set up control assignments for emulators and ES control
		clear
		ps3_set_ctrl_assignments
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 1 Controller complete" 5 43

		# call pairing function to set current bluetooth MAC to Player 2
		n="2"
		ps3_pair_blu
		# Set up control assignments for emulators
		clear
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 2 Controller complete" 5 43

		# call pairing function to set current bluetooth MAC to Player 3
		n="3"
		ps3_pair_blu
		# Set up control assignments for emulators
		clear
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 3 Controller complete" 5 43

		# call pairing function to set current bluetooth MAC to Player 4
		n="4"
		ps3_pair_blu
		# Set up control assignments for emulators
		clear
		ps3_set_emulator_ids
		dialog --msgbox "Pairing of Player 4 Controller complete" 5 43    
		;;

		esac
	done

	###########################################################
	# End controller pairing process
	###########################################################

	clear
	# start the service at boot time
	sixad --boot-yes

	# replace specific user paths that emulators and files may use
	h_emu_user_fixes

	# correct permissions since we install using sudo access
	h_correct_perms	
}

function ps3_pair_blu()
{
	####################################################################
	# Function Description:
	# 
	# Set and pair up player controller interactively
	####################################################################


	dialog --msgbox "Please plug in these items now:\n\n1)The USB cable\n2)PS3 controller $n \n
3)Bluetooth dongle\n\nAdditional controllers can be added in the settings menu"  12 40

	clear
	# Grab player 1 controller MAC Address of wired device
	echo "Setting up Playstation 3 Sixaxis (bluetooth) [Player $n]" | tee "$rootdir/logs/debug.log"
	sleep 2s

	# Pair controller with logging
	sixpair | tee "$rootdir/logs/debug.log"
	sleep 2s

	# Inform player 1 controller user to disconnect USB cord
	dialog --msgbox "Please disconnect the USB cable and press the PS Button now. The appropriate \
LED for player $n should be lit. If it is not, please hold in the PS button to turn it off, then back on.\n\nThere is no need to reboot to \
fully enable the controller(s)" 12 60

}

function ps3_set_ctrl_assignments()
{
	####################################################################
	# Function Description:
	# 
	# This function sets the control methods for ES navigation
	# and assigns the unique MAC address of P1 to use as primary
	####################################################################

	###########################################################
	### !!!!!!!! THIS NEEDS REWORKED FOR EmulationStation! ####
	###########################################################

	# inform user
	echo -e "Assigning controls to Emulation Station / applicable emulators based\non controller MAC Address"
	sleep 2s

	# Set PS3 Blu MAC value with the "joydetect" C program
	# Credit for this goes entirely to http://www.reddit.com/user/ElFeesho
	
	device_id=`joydetect /dev/input/js0 2>/dev/null`
	if [ -n "$device_id" ]; then 
		echo "found controller on device 0"
		PS3_MAC_BLU=$(echo $device_id | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')
		device_index_PS3=0
	else
		device_id=`joydetect /dev/input/js1 2>/dev/null`
		if [ -n "$device_id" ]; then  
			echo "found controller on device 1"
			PS3_MAC_BLU=$(echo $device_id | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')
			device_index_PS3=1
		else  
			device_id=`joydetect /dev/input/js2 2>/dev/null`
			if [ -n "$device_id" ]; then  
				echo "found controller on device 2"
				PS3_MAC_BLU=$(echo $device_id | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')
				device_index_PS3=2
			else  
				device_id=`joydetect /dev/input/js3 2>/dev/null`
				if [ -n "$device_id" ]; then  
					echo "found controller on device 3"
					PS3_MAC_BLU=$(echo $device_id | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')
					device_index_PS3=3
				else  
					echo "No device found. Please try again under RetroRig Settings/Change Gamepad Type"
				fi
			fi
		fi
	fi
	echo -e "\nController ID/MAC Address applied to ES controls was:\n$PS3_MAC_BLU \n"

	# First grab MAC Addresses:
	# In the config file, the MAC is set to 00:00:00:00:00:00

	# set default MAC values
	PS3_MAC_OLD="00:00:00:00:00:00"

	# Replace MAC Address for ***CONTROLLER 1 ONLY!*** This will be used to control ES		
	sed -i "s|$PS3_MAC_OLD|$PS3_MAC_BLU|g" "$es_home/es_input.cfg"
	sleep 2s

}

function ps3_set_emulator_ids()
{
	####################################################################
	# Function Description:
	# 
	# Set PS3 Blu MAC value with the "joydetect" C program for Dolphin 
	# controller assignments The MAC address of the unique controller is 
	# based off of $n, the current controller number being set by 
	# gp_ps3_blu_main, and later paired
	#################################################################### 

	# Stella Notes:
	# MAC ID temp placeholders seem "backwards" in stellarc due to P2 configuration showing at the top of the
	# configuration files set of joymaps, rather than the bottom 

	# PCSX2 Notes:
	# The "am_pcsx2_ps3_blu.joystick.xml" gamepad config file for antimicro contains a PS3 Bluetooth MAC ID
	# However, it is noted that it is "included for informational purposes only", so a sed swap should not
	# Be necessary
 
	if [ $n == "1" ]; then
		
		i=$((device_index_PS3+0))
		# Dolphin
		dolphin_MAC_BLU=$(joydetect /dev/input/js$i | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')
		# Stella (supports only 2 players )
		Stella_MAC_BLU=$(joydetect /dev/input/js$i | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')
		# Set MAC address for Steam Assignment
		Steam_MAC_BLU=$(joydetect /dev/input/js$i | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')

	elif [ $n == "2" ]; then
		
		i=$((device_index_PS3+1))
		# Dolphin
		dolphin_MAC_BLU=$(joydetect /dev/input/js$i | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')
		# Stella (supports only 2 players )
		Stella_MAC_BLU=$(joydetect /dev/input/js$i | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')

	elif [ $n == "3" ]; then
	        
		i=$((device_index_PS3+2))
		# Dolphin
		dolphin_MAC_BLU=$(joydetect /dev/input/js$i | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')

	elif [ $n == "4" ]; then
		
		i=$((device_index_PS3+3))
		# Dolphin
		dolphin_MAC_BLU=$(joydetect /dev/input/js$i | awk -F'[^:[a-zA-Z0-9]*' '{print $6}')

	else
		echo "Error setting MAC/ID for emulator"

	fi

	echo -e "Controller ID/MAC Address applied to the Dolphin emulator Controller $n was:\n$dolphin_MAC_BLU"
	echo -e "\nController ID/MAC Address applied to the Stella emulator Controller $n was:\n$Stella_MAC_BLU"

	# Assign controller ID for Dolphin
	## GC ##
	sed -i "s|MAC_TEMP_$n|$dolphin_MAC_BLU|g" "$config_home/.dolphin-emu/GC/Config/GCPadNew.ini"
	sed -i "s|MAC_TEMP_$n|$dolphin_MAC_BLU|g" "$config_home/.dolphin-emu/GC/Config/WiimoteNew.ini"
	## Wii ##
	sed -i "s|MAC_TEMP_$n|$dolphin_MAC_BLU|g" "$config_home/.dolphin-emu/Wii/Config/GCPadNew.ini"
	sed -i "s|MAC_TEMP_$n|$dolphin_MAC_BLU|g" "$config_home/.dolphin-emu/Wii/Config/WiimoteNew.ini"

	# Assign controller ID for Stella
	sed -i "s|MAC_TEMP_$n|$Stella_MAC_BLU|g" "$config_home/.stella/stellarc"
	
	sleep 2

}

function gp_ps3_usb()
{
	####################################################################
	# Function Description:
	# 
	# Assign and modify emulator configurations for PS3 Controller over
	# USB
	####################################################################

	# clean any old configs
	h_clean_gamepad

	# copy over default cfgs for ES:
	cp -v "$scriptdir/es-cfgs/es_systems.cfg" "$es_home"
	cp -v "$scriptdir/es-cfgs/es_settings.cfg" "$es_home"

	# Copy default ES input file
	cp "$scriptdir/gamepad-cfgs/ps3_usb_controller/es_input.cfg" "$es_home"

	# MAME
	# default path: /home/$USER/.retrorig/.mame
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/MAME/default.cfg" "$config_home/.mame/cfg"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/MAME/mame.ini" "$config_home/.mame/"

	# mess
	# default path: /home/$USER/.retrorig/.mednafen/mednafen.cfg
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/MESS/mess.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/MESS/aes.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/MESS/neocdz.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/MESS/default.cfg" "$config_home/.mess/cfg"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/MESS/neocdz.cfg" "$config_home/.mess/cfg"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/MESS/aes.cfg" "$config_home/.mess/cfg"

	# mednafen
	# default path: /home/$USER/.retrorig/.mednafen/mednafen.cfg
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/mednafen/mednafen-09x.cfg" "$config_home/.mednafen"

	# mupen64plus
	# default path: /home/$USER/.retrorig/.config/mupen64plus
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/mupen64plus/mupen64plus.cfg" "$config_home/.config/mupen64plus/"

	# Dolphin (GameCube/Wii)
	# default path: /home/$USER/.retrorig/.dolphin-emu/Wii/
	# default path: /home/$USER/.retrorig/.dolphin-emu/GC/
	## GC config ##
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/Dolphin/GC/GCPadNew.ini" "$config_home/.dolphin-emu/GC/Config/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/Dolphin/GC/Dolphin.ini" "$config_home/.dolphin-emu/GC/Config/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/Dolphin/GC/WiimoteNew.ini" "$config_home/.dolphin-emu/GC/Config/"
	## Wii config ##
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/Dolphin/Wii/GCPadNew.ini" "$config_home/.dolphin-emu/Wii/Config/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/Dolphin/Wii/Dolphin.ini" "$config_home/.dolphin-emu/Wii/Config/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/Dolphin/Wii/WiimoteNew.ini" "$config_home/.dolphin-emu/Wii/Config/"

	# Stella
	# default path: /home/$USER/.retrorig/.config/mupen64plus
	# Main config
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/Stella/stellarc" "$config_home/.stella/"

	# PCSX2
	# base config folder
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PCSX2/inisOnePAD.ini" "$config_home/.config/pcsx2/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PCSX2/PCSX2-reg.ini" "$config_home/.config/pcsx2/"
	# inis
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PCSX2/inis/GSdx.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PCSX2/inis/OnePAD.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PCSX2/inis/PCSX2_ui.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PCSX2/inis/PCSX2_vm.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PCSX2/inis/spu2-x.ini" "$config_home/.config/pcsx2/inis/"

	# PPSSPP
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PPSSPP/ppsspp.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/PPSSPP/controls.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"

	# Gens GS (Sega CD/32X)
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/GensGS/gens.cfg" "$config_home/.gens/"

	# RetroArch
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/retroarch/retroarch.cfg" "$config_home/.config/retroarch/"
	cp -v "$scriptdir/emu-cfgs/ps3_usb_controller/retroarch/desmume_libretro.cfg" "$config_home/.config/retroarch/"

	# Alter Steam config.vdf with proper controls if controller exists
	STEAM_GP_TYPE="ps3usb"
	gp_steam_control

	##############################################################
	# Set system objects
	##############################################################

	# inject init script and default config for xboxdrv
	cp -v "$scriptdir/init-scripts/ps3_usb_controller/xboxdrv" "/etc/init.d/"
	cp -v "$scriptdir/init-scripts/ps3_usb_controller/default/xboxdrv" "/etc/default/"
	
	# blacklist xpad
	cp -v "$scriptdir/init-scripts/ps3_usb_controller/blacklist.conf" "/etc/modprobe.d/"

	##############################################################
	# Set number of controllers for /etc/default/xboxdrv
	##############################################################

	# grab the current number of controlls from file
	cont_num_org=$(grep "CONTROLLER_NUM=" "/etc/default/xboxdrv")

	# inform user that you must have controller connected or restart
	dialog --msgbox "The xboxdrv userland module detects the number of PS3 controllers connected \
when it starts. Therefore, we must specify how many you have connected or want to use. \
If you tell xboxdrv that you have 3 controllers, when you only have one, \
the service may fail to start correctly.\n\nPlease see /etc/default/xboxdrv for more. Press the PS Button after \
RetorRig loads to use the gamepad" 14 60

	# Present small menu asking for number of controllers
	cmd=(dialog --backtitle "LibreGeek.org RetroRig Installer" \
		    --menu "Please select the number of USB PS3 controllers" 16 47 16)
	options=(1 "1"
	 	 2 "2"
	 	 3 "3"
	 	 4 "4")

	#make menu choice
	selection=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	#functions

	for choice in $selection
	do
		case $choice in

		1)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=1|g" "/etc/default/xboxdrv"
		;;

		2)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=2|g" "/etc/default/xboxdrv"
		;;

		3)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=3|g" "/etc/default/xboxdrv"
		;;

		4)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=4|g" "/etc/default/xboxdrv"
		;;

		esac
	done

	###########################################################
	# Add emulator specifc control remaps here for qjoypad
	###########################################################
	# !!! Removed in favor of anitmicro since 0.9.5b !!!
	###########################################################

	# blacklist xpad
	cp -v "$scriptdir/init-scripts/ps3_blu_controller/blacklist.conf" "/etc/modprobe.d/"

	###############################################################################################
	# Add emulator specifc control remaps here for AniMicro
	###############################################################################################
	# set vars for pre/post command for the PPSSPP emulator in RCB
	# We need this unforuntely, since the SDL/sixad mapping are so screwy, we need ot use 
	# keyboard.Esc instead of a button press (PS button is an axis in sixad anyway).
	# It is very important that you preceed '&amp;' with a backslash to escape the '&' character
	# so it is properly replaced. RCB requires '&amp' over the literal '&'.s
	###############################################################################################

	# copy in profiles for emulators (antimicro)
	cp -v "$scriptdir/gamepad-cfgs/ps3_usb_controller/antimicro_settings.ini" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_usb_controller/am_pcsx2_ps3_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_usb_controller/am_mednafen_gen_ps3_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_usb_controller/am_mednafen_ps1_ps3_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_usb_controller/am_dolphin_ps3_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_usb_controller/am_ppsspp_ps3_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/ps3_usb_controller/am_gensgs_ps3_blu.joystick.xml" "$config_home/.config/antimicro/"

	#####################
	# PCSX2
	#####################

	old_pre="ps2_pre"
	old_post="ps2_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_pcsx2_ps3_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"
 

	#####################
	# PPSSPP
	#####################

	old_pre="psp_pre"
	old_post="psp_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_ppsspp_ps3_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="&\&\ killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	#####################
	# Mednafen (PSX/PS1)
	#####################

	old_pre="ps1_pre"
	old_post="ps1_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_ps1_ps3_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="&\&\ killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	#####################
	# Mednafen (general)
	#####################

	old_pre="med_gen_pre"
	old_post="med_gen_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_gen_ps3_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	#########################
	# Dolphin (GameCube/Wii)
	#########################

	old_pre="dolphin_pre"
	old_post="dolphin_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_dolphin_ps3_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	################################
	# Gens GS (Sega CD/32X/Genesis)
	################################

	old_pre="gens_pre"
	old_post="gens_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_gensgs_ps3_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	#update init scripts for xboxdrv
	$update_init_xboxdrv

	# restart the xboxdrv service, not start, in case it was already loaded for a gamepad change
	$cmd_xboxdrv_restart

	# replace specific user paths that emulators and files may use
	h_emu_user_fixes

	# correct permissions since we install using sudo access
	h_correct_perms

	sixad --boot-no
}

function gp_x360_wireless()
{
	####################################################################
	# Function Description:
	# 
	# Assign and modify emulator configurations for wireless 
	# X360 Controller
	####################################################################

	# clean any old configs
	h_clean_gamepad

	# copy over default cfgs for ES:
	cp -v "$scriptdir/es-cfgs/es_systems.cfg" "$es_home"
	cp -v "$scriptdir/es-cfgs/es_settings.cfg" "$es_home"

	# Copy default ES input file
	cp "$scriptdir/gamepad-cfgs/x360_wireless_controller/es_input.cfg" "$es_home"

	#######################################################
	# Add controller specifc emulator controls
	#######################################################

	#mame
	# default path: /home/$USER/.mame
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/MAME/default.cfg" "$config_home/.mame/cfg"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/MAME/mame.ini" "$config_home/.mame/"

	# mess
	# default path: /home/$USER/.mednafen/mednafen.cfg
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/MESS/mess.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/MESS/aes.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/MESS/neocdz.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/MESS/default.cfg" "$config_home/.mess/cfg"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/MESS/neocdz.cfg" "$config_home/.mess/cfg"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/MESS/aes.cfg" "$config_home/.mess/cfg"

	# mednafen
	# default path: /home/$USER/.mednafen/mednafen.cfg
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/mednafen/mednafen-09x.cfg" "$config_home/.mednafen/"

	# mupen64plus
	# default path: /home/$USER/.config/mupen64plus
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/mupen64plus/mupen64plus.cfg" "$config_home/.config/mupen64plus/"

	# Dolphin (GameCube/Wii)
	# default path: /home/$USER/.retrorig/.dolphin-emu/Wii/
	# default path: /home/$USER/.retrorig/.dolphin-emu/GC/
	## GC config ##
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/Dolphin/GC/GCPadNew.ini" "$config_home/.dolphin-emu/GC/Config/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/Dolphin/GC/Dolphin.ini" "$config_home/.dolphin-emu/GC/Config/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/Dolphin/GC/WiimoteNew.ini" "$config_home/.dolphin-emu/GC/Config/"
	## Wii config ##
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/Dolphin/Wii/GCPadNew.ini" "$config_home/.dolphin-emu/Wii/Config/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/Dolphin/Wii/Dolphin.ini" "$config_home/.dolphin-emu/Wii/Config/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/Dolphin/Wii/WiimoteNew.ini" "$config_home/.dolphin-emu/Wii/Config/"

	# PCSX2
	# base config folder
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PCSX2/inisOnePAD.ini" "$config_home/.config/pcsx2/inisOnePAD.ini"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PCSX2/PCSX2-reg.ini" "$config_home/.config/pcsx2/PCSX2-reg.ini"
	# inis
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PCSX2/inis/GSdx.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PCSX2/inis/OnePAD.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PCSX2/inis/PCSX2_ui.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PCSX2/inis/PCSX2_vm.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PCSX2/inis/spu2-x.ini" "$config_home/.config/pcsx2/inis/"

	#Stella
	#default path: /home/$USER/.config/mupen64plus
	#Main config
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/Stella/stellarc" "$config_home/.stella/"

	# PPSSPP
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PPSSPP/ppsspp.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/PPSSPP/controls.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"

	# Gens GS (Sega CD/32X)
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/GensGS/gens.cfg" "$config_home/.gens/"

	# RetroArch
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/retroarch/retroarch.cfg" "$config_home/.config/retroarch/"
	cp -v "$scriptdir/emu-cfgs/x360_wireless_controller/retroarch/desmume_libretro.cfg" "$config_home/.config/retroarch/"

	# Alter Steam config.vdf with proper controls if controller exists
	STEAM_GP_TYPE="x360wireless"
	gp_steam_control

	#######################################################
	# configure xboxdrv for 360 gamepad (wireless)
	#######################################################
	
	#blacklist xpad
	cp -v "$scriptdir/init-scripts/x360_wireless_controller/blacklist.conf" "/etc/modprobe.d/"

	#inject init script and default config
	cp -v "$scriptdir/init-scripts/x360_wireless_controller/xboxdrv" "/etc/init.d/"
	cp -v "$scriptdir/init-scripts/x360_wireless_controller/default/xboxdrv" "/etc/default/"

	##############################################################
	# Set number of controllers for /etc/default/xboxdrv
	##############################################################

	# grab the current number of controlls from file
	cont_num_org=$(grep "CONTROLLER_NUM=" "/etc/default/xboxdrv")

	# inform user that you must have controller connected or restart
	dialog --msgbox "The xboxdrv userland module detects the number of Xbox controllers connected \
when it starts. Therefore, we must specify how many you have connected or want to use. \
There is no need to reboot to have these changes take effect. If you tell xboxdrv that you have 3 controllers, when you only have one, \
the service may fail to start correctly.\n\nPlease see /etc/default/xboxdrv for more. Press the center Guide Button after \
RetorRig loads to use the gamepad." 14 62

	# Present small menu asking for number of controllers
	cmd=(dialog --backtitle "LibreGeek.org RetroRig Installer" \
		    --menu "Please select the number of Xbox 360 controllers" 16 47 16)
	options=(1 "1"
	 	 2 "2"
	 	 3 "3"
	 	 4 "4")

	#make menu choice
	selection=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	#functions

	for choice in $selection
	do
		case $choice in

		1)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=1|g" "/etc/default/xboxdrv"
		;;

		2)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=2|g" "/etc/default/xboxdrv"
		;;

		3)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=3|g" "/etc/default/xboxdrv"
		;;

		4)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=4|g" "/etc/default/xboxdrv"
		;;

		esac
	done

	###########################################################
	# Add emulator specifc control remaps here for qjoypad
	###########################################################
	# !!! Removed in favor of anitmicro since 0.9.5b !!!
	###########################################################

	# blacklist xpad
	cp -v "$scriptdir/init-scripts/x360_wireless_controller/blacklist.conf" "/etc/modprobe.d/"

	###########################################################
	# Add emulator specifc control remaps here for AniMicro
	###########################################################
	# Note: In due time, AntiMicro may replace qjoypad for all
	# emulator control hotswaps for gamepads
	###########################################################

	# copy in profiles for emulators (antimicro)
	cp -v "$scriptdir/gamepad-cfgs/x360_wireless_controller/antimicro_settings.ini" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_wireless_controller/am_pcsx2_x360_wireless.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_wireless_controller/am_mednafen_gen_x360_wireless.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_wireless_controller/am_mednafen_ps1_x360_wireless.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_wireless_controller/am_ppsspp_x360_wireless.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_wireless_controller/am_dolphin_x360_wireless.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_wireless_controller/am_gensgs_x360_wireless.joystick.xml" "$config_home/.config/antimicro/"

	#####################
	# PCSX2
	#####################

	old_pre="ps2_pre"
	old_post="ps2_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_pcsx2_x360_wireless.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	#####################
	# Mednafen (general)
	#####################

	old_pre="med_gen_pre"
	old_post="med_gen_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_gen_x360_wireless.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	#####################
	# Mednafen (PS1/PSX)
	#####################

	old_pre="ps1_pre"
	old_post="ps1_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_ps1_x360_wireless.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	#####################
	# PPSSPP
	#####################

	old_pre="psp_pre"
	old_post="psp_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_ppsspp_x360_wireless.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	###########################
	# Dolphin  (GameCube/Wii)
	###########################

	old_pre="dolphin_pre"
	old_post="dolphin_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_dolphin_x360_wireless.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	################################
	# Gens GS (Sega CD/32X/Genesis)
	################################

	old_pre="gens_pre"
	old_post="gens_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_gensgs_x360_wireless.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"


	#update init scripts for xboxdrv
	$update_init_xboxdrv

	# restart the xboxdrv service, not start, in case it was already loaded for a gamepad change
	$cmd_xboxdrv_restart

	# replace specific user paths that emulators and files may use
	h_emu_user_fixes

	# correct permissions since we install using sudo access
	h_correct_perms
	
	# Turn off the sixad service
	sixad --boot-no
}

function gp_x360_usb()
{
	####################################################################
	# Function Description:
	# 
	# Assign and modify emulator configurations for USB / Wired 
	# X360 Controller
	####################################################################

	# clean any old configs
	h_clean_gamepad

	# copy over default cfgs for ES:
	cp -v "$scriptdir/es-cfgs/es_systems.cfg" "$es_home"
	cp -v "$scriptdir/es-cfgs/es_settings.cfg" "$es_home"

	# Copy default ES input file
	cp "$scriptdir/gamepad-cfgs/x360_usb_controller/es_input.cfg" "$es_home"

	#######################################################
	# Add controller specifc emulator controlos
	#######################################################

	#mame
	# default path: /home/$USER/.mame
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/MAME/default.cfg" "$config_home/.mame/cfg"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/MAME/mame.ini" "$config_home/.mame/"

	# mess
	# default path: /home/$USER/.mednafen/mednafen.cfg
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/MESS/mess.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/MESS/aes.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/MESS/neocdz.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/MESS/default.cfg" "$config_home/.mess/cfg/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/MESS/neocdz.cfg" "$config_home/.mess/cfg/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/MESS/aes.cfg" "$config_home/.mess/cfg/"

	# mednafen
	# default path: /home/$USER/.mednafen/mednafen.cfg
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/mednafen/mednafen-09x.cfg" "$config_home/.mednafen/"

	# mupen64plus
	# default path: /home/$USER/.config/mupen64plus
	# Main config
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/mupen64plus/mupen64plus.cfg" "$config_home/.config/mupen64plus/"

	# Dolphin (GameCube/Wii)
	# default path: /home/$USER/.retrorig/.dolphin-emu/Wii/
	# default path: /home/$USER/.retrorig/.dolphin-emu/GC/
	## GC config ##
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/Dolphin/GC/GCPadNew.ini" "$config_home/.dolphin-emu/GC/Config/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/Dolphin/GC/Dolphin.ini" "$config_home/.dolphin-emu/GC/Config/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/Dolphin/GC/WiimoteNew.ini" "$config_home/.dolphin-emu/GC/Config/"
	## Wii config ##
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/Dolphin/Wii/GCPadNew.ini" "$config_home/.dolphin-emu/Wii/Config/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/Dolphin/Wii/Dolphin.ini" "$config_home/.dolphin-emu/Wii/Config/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/Dolphin/Wii/WiimoteNew.ini" "$config_home/.dolphin-emu/Wii/Config/"

	# PCSX2
	# base config folder
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PCSX2/inisOnePAD.ini" "$config_home/.config/pcsx2/inisOnePAD.ini"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PCSX2/PCSX2-reg.ini" "$config_home/.config/pcsx2/PCSX2-reg.ini"
	# inis
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PCSX2/inis/GSdx.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PCSX2/inis/OnePAD.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PCSX2/inis/PCSX2_ui.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PCSX2/inis/PCSX2_vm.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PCSX2/inis/spu2-x.ini" "$config_home/.config/pcsx2/inis/"

	#Stella
	#default path: /home/$USER/.config/mupen64plus
	#Main config
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/Stella/stellarc" "$config_home/.stella/"

	# PPSSPP
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PPSSPP/ppsspp.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/PPSSPP/controls.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"

	# Gens GS (Sega CD/32X)
	cp -v "$scriptdir/emu-cfgs/x360_usb_controller/GensGS/gens.cfg" "$config_home/.gens/"

	# copy over default cfgs for ES:
	cp -v "$scriptdir/es-cfgs/es_systems.cfg" "$es_home"
	cp -v "$scriptdir/es-cfgs/es_settings.cfg" "$es_home"

	# Alter Steam config.vdf with proper controls if controller exists
	STEAM_GP_TYPE="x360usb"
	gp_steam_control

	############################################
	# configure xboxdrv for 360 gamepad (USB)
	############################################
	
	#blacklist xpad
	cp -v "$scriptdir/init-scripts/x360_usb_controller/blacklist.conf" "/etc/modprobe.d/"

	#inject init script and default config
	cp -v "$scriptdir/init-scripts/x360_usb_controller/xboxdrv" "/etc/init.d/"
	cp -v "$scriptdir/init-scripts/x360_usb_controller/default/xboxdrv" "/etc/default/"

	##############################################################
	# Set number of controllers for /etc/default/xboxdrv
	##############################################################

	# grab the current number of controlls from file
	cont_num_org=$(grep "CONTROLLER_NUM=" "/etc/default/xboxdrv")

	# inform user that you must have controller connected or restart
	dialog --msgbox "The xboxdrv userland module detects the number of USB PS3 controllers connected \
when it starts. Therefore, we must specify how many you have connected or want to use. \
There is no need to reboot to have these changes take effect! If you tell xboxdrv I have 3 controllers, when you only have one, \
the service may fail to start correctly.\n\nPlease see /etc/default/xboxdrv for more. Press the PS Button after \
RetorRig loads to use the gamepad" 14 62

	# Present small menu asking for number of controllers
	cmd=(dialog --backtitle "LibreGeek.org RetroRig Installer" \
		    --menu "Please select the number of USB Xbox controllers" 16 47 16)
	options=(1 "1"
	 	 2 "2"
	 	 3 "3"
	 	 4 "4")

	#make menu choice
	selection=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	#functions

	for choice in $selection
	do
		case $choice in

		1)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=1|g" "/etc/default/xboxdrv"
		;;

		2)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=2|g" "/etc/default/xboxdrv"
		;;

		3)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=3|g" "/etc/default/xboxdrv"
		;;

		4)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=4|g" "/etc/default/xboxdrv"
		;;

		esac
	done

	###########################################################
	# Add emulator specifc control remaps here for qjoypad
	###########################################################
	# !!! Removed in favor of anitmicro since 0.9.5b !!!
	###########################################################

	# blacklist xpad
	cp -v "$scriptdir/init-scripts/x360_usb_controller/blacklist.conf" "/etc/modprobe.d/"

	###########################################################
	# Add emulator specifc control remaps here for AniMicro
	###########################################################
	# Note: In due time, AntiMicro may replace qjoypad for all
	# emulator control hotswaps for gamepads
	###########################################################

	# copy in profiles for emulators (antimicro)
	cp -v "$scriptdir/gamepad-cfgs/x360_usb_controller/antimicro_settings.ini" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_usb_controller/am_pcsx2_x360_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_usb_controller/am_mednafen_gen_x360_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_usb_controller/am_mednafen_ps1_x360_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_usb_controller/am_ppsspp_x360_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_usb_controller/am_dolphin_x360_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/x360_usb_controller/am_gensgs_x360_usb.joystick.xml" "$config_home/.config/antimicro/"

	#####################
	# PCSX2
	#####################

	old_pre="ps2_pre"
	old_post="ps2_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_pcsx2_x360_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	#####################
	# Mednafen (general)
	#####################

	old_pre="med_gen_pre"
	old_post="med_gen_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_gen_x360_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	#####################
	# Mednafen (PS1/PSX)
	#####################

	old_pre="ps1_pre"
	old_post="ps1_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_ps1_x360_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	#####################
	# PPSSPP
	#####################

	old_pre="psp_pre"
	old_post="psp_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_ppsspp_x360_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	##########################
	# Dolphin (GameCube/Wii)
	##########################

	old_pre="dolphin_pre"
	old_post="dolphin_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_dolphin_x360_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	################################
	# Gens GS (Sega CD/32X/Genesis)
	################################

	old_pre="gens_pre"
	old_post="gens_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_gensgs_x360_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	# update init scripts for xboxdrv
	$update_init_xboxdrv

	# restart the xboxdrv service, not start, in case it was already loaded for a gamepad change
	$cmd_xboxdrv_restart

	# replace specific user paths that emulators and files may use
	h_emu_user_fixes

	# correct permissions since we install using sudo access
	h_correct_perms

	# Let the user know about LED's
	dialog --msgbox "Using wired controllers, the pairing is in sequence. If you \
received the wrong LED, unplug and plug the USB cable back in until you get the correct LED number."  16 62

	sixad --boot-no
}

function gp_generic_usb()
{

	# !!!!!!! SECTION NEEDS DONE !!!!!!!!!!!!!!

	####################################################################
	# Function Description:
	# 
	# Assign and modify emulator configurations for USB / Wired 
	# This gamepad function serves to help all generic
	# "Xbox 360 like" controllers. 
	# 16 buttons (4 face, 4 trigger, 4 dpad, start, select, thumb-click)
	####################################################################

	# clean any old configs
	h_clean_gamepad

	# copy over default cfgs for ES:
	cp -v "$scriptdir/es-cfgs/es_systems.cfg" "$es_home"
	cp -v "$scriptdir/es-cfgs/es_settings.cfg" "$es_home"

	# Copy default ES input file:
	cp "$scriptdir/gamepad-cfgs/generic_usb_controller/es_input.cfg" "$es_home"

	#######################################################
	# Add controller specifc emulator controlos
	#######################################################

	#mame
	# default path: /home/$USER/.mame
	# Main config
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/MAME/default.cfg" "$config_home/.mame/cfg"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/MAME/mame.ini" "$config_home/.mame/"

	# mess
	# default path: /home/$USER/.mednafen/mednafen.cfg
	# Main config
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/MESS/mess.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/MESS/aes.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/MESS/neocdz.ini" "$config_home/.mess/"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/MESS/default.cfg" "$config_home/.mess/cfg/"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/MESS/neocdz.cfg" "$config_home/.mess/cfg/"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/MESS/aes.cfg" "$config_home/.mess/cfg/"

	# mednafen
	# default path: /home/$USER/.mednafen/mednafen.cfg
	# Main config
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/mednafen/mednafen-09x.cfg" "$config_home/.mednafen/"

	# mupen64plus
	# default path: /home/$USER/.config/mupen64plus
	# Main config
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/mupen64plus/mupen64plus.cfg" "$config_home/.config/mupen64plus/"

	# Dolphin (GameCube/Wii)
	# default path: /home/$USER/.retrorig/.dolphin-emu/Wii/
	# default path: /home/$USER/.retrorig/.dolphin-emu/GC/
	## GC config ##
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/Dolphin/GC/GCPadNew.ini" "$config_home/.dolphin-emu/GC/Config/"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/Dolphin/GC/Dolphin.ini" "$config_home/.dolphin-emu/GC/Config/"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/Dolphin/GC/WiimoteNew.ini" "$config_home/.dolphin-emu/GC/Config/"
	## Wii config ##
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/Dolphin/Wii/GCPadNew.ini" "$config_home/.dolphin-emu/Wii/Config/"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/Dolphin/Wii/Dolphin.ini" "$config_home/.dolphin-emu/Wii/Config/"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/Dolphin/Wii/WiimoteNew.ini" "$config_home/.dolphin-emu/Wii/Config/"

	# PCSX2
	# base config folder
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/PCSX2/inisOnePAD.ini" "$config_home/.config/pcsx2/inisOnePAD.ini"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/PCSX2/PCSX2-reg.ini" "$config_home/.config/pcsx2/PCSX2-reg.ini"
	# inis
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/PCSX2/inis/GSdx.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/PCSX2/inis/OnePAD.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/PCSX2/inis/PCSX2_ui.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/PCSX2/inis/PCSX2_vm.ini" "$config_home/.config/pcsx2/inis/"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/PCSX2/inis/spu2-x.ini" "$config_home/.config/pcsx2/inis/"

	#Stella
	#default path: /home/$USER/.config/mupen64plus
	#Main config
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/Stella/stellarc" "$config_home/.stella/"

	# PPSSPP
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/PPSSPP/ppsspp.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/PPSSPP/controls.ini" "$config_home/.config/ppsspp/PSP/SYSTEM/"

	# Gens GS (Sega CD/32X)
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/GensGS/gens.cfg" "$config_home/.gens/"

	# RetroArch
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/retroarch/retroarch.cfg" "$config_home/.config/retroarch/"
	cp -v "$scriptdir/emu-cfgs/generic_usb_controller/retroarch/desmume_libretro.cfg" "$config_home/.config/retroarch/"

	# copy over default cfgs for ES:
	cp -v "$scriptdir/es-cfgs/es_systems.cfg" "$es_home"
	cp -v "$scriptdir/es-cfgs/es_settings.cfg" "$es_home"

	# Alter Steam config.vdf with proper controls if controller exists
	STEAM_GP_TYPE="x360usb"
	gp_steam_control

	############################################
	# configure xboxdrv for 360 gamepad (USB)
	############################################
	
	#blacklist xpad
	cp -v "$scriptdir/init-scripts/generic_usb_controller/blacklist.conf" "/etc/modprobe.d/"

	#inject init script and default config
	cp -v "$scriptdir/init-scripts/generic_usb_controller/xboxdrv" "/etc/init.d/"
	cp -v "$scriptdir/init-scripts/generic_usb_controller/default/xboxdrv" "/etc/default/"

	##############################################################
	# Set number of controllers for /etc/default/xboxdrv
	##############################################################

	# grab the current number of controlls from file
	cont_num_org=$(grep "CONTROLLER_NUM=" "/etc/default/xboxdrv")

	# inform user that you must have controller connected or restart
	dialog --msgbox "The xboxdrv userland module detects the number of USB PS3 controllers connected \
when it starts. Therefore, we must specify how many you have connected or want to use. \
There is no need to reboot to have these changes take effect! If you tell xboxdrv I have 3 controllers, when you only have one, \
the service may fail to start correctly.\n\nPlease see /etc/default/xboxdrv for more. Press the PS Button after \
RetorRig loads to use the gamepad" 14 62

	# Present small menu asking for number of controllers
	cmd=(dialog --backtitle "LibreGeek.org RetroRig-ES Installer" \
		    --menu "Please select the number of USB Xbox controllers" 16 47 16)
	options=(1 "1"
	 	 2 "2"
	 	 3 "3"
	 	 4 "4")

	#make menu choice
	selection=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	#functions

	for choice in $selection
	do
		case $choice in

		1)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=1|g" "/etc/default/xboxdrv"
		;;

		2)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=2|g" "/etc/default/xboxdrv"
		;;

		3)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=3|g" "/etc/default/xboxdrv"
		;;

		4)
		sed -i "s|$cont_num_org|CONTROLLER_NUM=4|g" "/etc/default/xboxdrv"
		;;

		esac
	done

	###########################################################
	# Add emulator specifc control remaps here for qjoypad
	###########################################################
	# !!! Removed in favor of anitmicro since 0.9.5b !!!
	###########################################################

	# blacklist xpad
	cp -v "$scriptdir/init-scripts/generic_usb_controller/blacklist.conf" "/etc/modprobe.d/"

	###########################################################
	# Add emulator specifc control remaps here for AniMicro
	###########################################################
	# Note: In due time, AntiMicro may replace qjoypad for all
	# emulator control hotswaps for gamepads
	###########################################################

	# copy in profiles for emulators (antimicro)
	cp -v "$scriptdir/gamepad-cfgs/generic_usb_controller/antimicro_settings.ini" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/generic_usb_controller/am_pcsx2_16btn_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/generic_usb_controller/am_mednafen_gen_16btn_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/generic_usb_controller/am_mednafen_ps1_16btn_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/generic_usb_controller/am_ppsspp_16btn_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/generic_usb_controller/am_dolphin_16btn_usb.joystick.xml" "$config_home/.config/antimicro/"
	cp -v "$scriptdir/gamepad-cfgs/generic_usb_controller/am_gensgs_16btn_usb.joystick.xml" "$config_home/.config/antimicro/"

	#####################
	# PCSX2
	#####################

	old_pre="ps2_pre"
	old_post="ps2_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_pcsx2_16btn_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	#####################
	# Mednafen (general)
	#####################

	old_pre="med_gen_pre"
	old_post="med_gen_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_gen_16btn_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	#####################
	# Mednafen (PS1/PSX)
	#####################

	old_pre="ps1_pre"
	old_post="ps1_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_mednafen_ps1_16btn_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall pcsx2 antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	#####################
	# PPSSPP
	#####################

	old_pre="psp_pre"
	old_post="psp_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_ppsspp_16btn_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post=" \&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	##########################
	# Dolphin (GameCube/Wii)
	##########################

	old_pre="dolphin_pre"
	old_post="dolphin_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_dolphin_16btn_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	################################
	# Gens GS (Sega CD/32X/Genesis)
	################################

	old_pre="gens_pre"
	old_post="gens_post"
	new_pre="antimicro --hidden --profile $config_home/.config/antimicro/am_gensgs_16btn_usb.joystick.xml \&"
	# The line below is only for good measure
	new_post="\&\& killall antimicro"
	# perform actual changes
	sed -i "s|$old_pre|$new_pre|g" "$es_home/es_systems.cfg"
	sed -i "s|$old_post|$new_post|g" "$es_home/es_systems.cfg"

	# update init scripts for xboxdrv
	$update_init_xboxdrv

	# restart the xboxdrv service, not start, in case it was already loaded for a gamepad change
	$cmd_xboxdrv_restart

	#####################################################################################
	# THIS FUNCTION SECTION IS NOT USED AT THE MOMENT, MORE TESTING IS NEEDED!!!
	#####################################################################################

	# replace specific user paths that emulators and files may use
	h_emu_user_fixes

	# correct permissions since we install using sudo access
	h_correct_perms

	# Let the user know about LED's
	dialog --msgbox "Using wired controllers, the pairing is in sequence. If you \
received the wrong LED, unplug and plug the USB cable back in until you get the correct LED number."  16 62

	sixad --boot-no
}

function enable_gp_autostart()
{
	####################################################################
	#
	# Function Description:
	# 
	# enable / disable auto start function for RetroRig with gamepads
	# 	#
	#################################################################### 

	clear

	PS3_USB=$(grep -m 1 -Ee "autostartES_PS3_USB" "/usr/share/applications/gp_autodetect.sh")
	PS3_BT=$(grep -m 1 -Ee "autostartES_PS3_BT" "/usr/share/applications/gp_autodetect.sh")
	
	#default gamepad autostart is disabled
	gp_autostart=disabled
	
	dialog --title "Confirm yes/no" \
	--backtitle "Auto Start RetroRig" \
	--yesno "Do you want to have RetroRig-ES started automatically for the first gamepad being switch on? (PS3 Sixaxis only)"  7 60
	# Get exit status
	# 0 means user hit [yes] button.
	# 1 means user hit [no] button.
	# 255 means user hit [Esc] key.
	response=$?
	case $response in
		0)
			gp_autostart=enabled
		;;

		1)
			gp_autostart=disabled
		;;

		255)
			gp_autostart=disabled
		;;
	esac
	
	if [ "$gp_autostart" == "enabled" ]; then
		sed -i "s|$PS3_USB|autostartES_PS3_USB=enabled|g" "/usr/share/applications/gp_autodetect.sh"
		sed -i "s|$PS3_BT|autostartES_PS3_BT=enabled|g" "/usr/share/applications/gp_autodetect.sh"
	else
		sed -i "s|$PS3_USB|autostartES_PS3_USB=disabled|g" "/usr/share/applications/gp_autodetect.sh"
		sed -i "s|$PS3_BT|autostartES_PS3_BT=disabled|g" "/usr/share/applications/gp_autodetect.sh"
	fi
	
	clear
	$cmd_rescan_restart
	sleep 2
}


function enable_rr_autostart()
{
	####################################################################
	#
	# Function Description:
	# 
	# enable / disable auto start of RetroRig after login
	# 	
	#################################################################### 

	clear

	rr_autostart=disabled
	
	dialog --title "Confirm yes/no" \
	--backtitle "Auto Start RetroRig" \
	--yesno "Do you want to have RetroRig-ES started after the X server loads (GUI)?"  6 60
	# Get exit status
	# 0 means user hit [yes] button.
	# 1 means user hit [no] button.
	# 255 means user hit [Esc] key.
	response=$?
	case $response in
		0)
			rr_autostart=enabled
		;;

		1)
			rr_autostart=disabled
		;;

		255)
			rr_autostart=disabled
		;;
	esac
	
	if [ "$rr_autostart" == "enabled" ]; then
		# create autostart entry, remove prior if it exists
		rm -f "$home.config/autostart/RetroRig-ES.desktop"
		cp -v "$scriptdir/es-cfgs/extra/RetroRig-ES.desktop" "$home/.config/autostart"
		# fix permissions
		chmod 755 "$home/.config/autostart/RetroRig-ES.desktop"
	else
		# remove any existing entry
		rm -f "$home/.config/autostart/RetroRig-ES.desktop"
	fi

	sleep 2
}

function wii_motion_controller_for_dolphin()
{
	####################################################################
	#
	# Function Description:
	# 
	# configure dolphin to use a Wii motion controller for Wii games
	#
	#################################################################### 

	#native or emulated Wii controller 1=emulated 2=native
	clear
	src=1

	# get the current state of GC controller state
	# on state = 6
	# off state = 0
	gc1_state=$(grep "SIDevice0 = " "$config_home/.dolphin-emu/Wii/Config/Dolphin.ini")
	gc2_state=$(grep "SIDevice1 = " "$config_home/.dolphin-emu/Wii/Config/Dolphin.ini")
	gc3_state=$(grep "SIDevice2 = " "$config_home/.dolphin-emu/Wii/Config/Dolphin.ini")
	gc4_state=$(grep "SIDevice3 = " "$config_home/.dolphin-emu/Wii/Config/Dolphin.ini")


cmd=(dialog --backtitle "LibreGeek.org RetroRig" --menu "How do you wish to play your Wii games?" 18 0 15)
options=(1 "Real Wiimote"  
	 2 "Emulated Wiimote"
	 3 "Emulated Gamecube Controller")

	#make menu choice
	selection=$("${cmd[@]}" "${options[@]}" 2>&1 >/dev/tty)
	#functions

	for choice in $selection
	do
		case $choice in

		1)
			clear
			src=2
			dialog --msgbox "For Wii games, controls have been mapped to a native motion controller. Press 1+2 for older Wii controller, or the small button in the battery compartement to activate the controller every time after game start. Navigation in Emulation Station, game launch and exit for Wii games, as for all other games, is still handled by your primary controller. This applies also to the save state and load state functions. Use your primary controller in parallel to your Wii controller to save and load game states. " 14 60

			# DISABLE GC controller since user wants to use the Wiimote
			# This was noted by a user to cause conflicts with using a Wii mote at the same time

			sed -i "s|$gc1_state|SIDevice0 = 0|g" "$config_home/.dolphin-emu/Wii/Config/Dolphin.ini"
			sed -i "s|$gc2_state|SIDevice1 = 0|g" "$config_home/.dolphin-emu/Wii/Config/Dolphin.ini"
			sed -i "s|$gc3_state|SIDevice2 = 0|g" "$config_home/.dolphin-emu/Wii/Config/Dolphin.ini"
			sed -i "s|$gc4_state|SIDevice3 = 0|g" "$config_home/.dolphin-emu/Wii/Config/Dolphin.ini"

			# assign Wiimote
			sed -i "s|PLAYER_SRC|$src|g" "$config_home/.dolphin-emu/Wii/Config/WiimoteNew.ini"
			;;

		2)
			src=1
			# DISABLE GC controller since user wants to use the emulated Wiimote
			# This was noted by a user to cause conflicts with using a Wii mote at the same time
			sed -i "s|$gc1_state|SIDevice0 = 0|g" "$config_home/.dolphin-emu/Wii/Config/Dolphin.ini"
			sed -i "s|$gc2_state|SIDevice1 = 0|g" "$config_home/.dolphin-emu/Wii/Config/Dolphin.ini"
			sed -i "s|$gc3_state|SIDevice2 = 0|g" "$config_home/.dolphin-emu/Wii/Config/Dolphin.ini"
			sed -i "s|$gc4_state|SIDevice3 = 0|g" "$config_home/.dolphin-emu/Wii/Config/Dolphin.ini"

			# assign Wiimote
			sed -i "s|PLAYER_SRC|$src|g" "$config_home/.dolphin-emu/Wii/Config/WiimoteNew.ini"
			;;

		3)
			src=0
			# ENABLE GC controller since user does not want to use a Wiimote
			sed -i "s|$gc1_state|SIDevice0 = 6|g" "$config_home/.dolphin-emu/Wii/Config/Dolphin.ini"
			sed -i "s|$gc2_state|SIDevice1 = 6|g" "$config_home/.dolphin-emu/Wii/Config/Dolphin.ini"
			sed -i "s|$gc3_state|SIDevice2 = 6|g" "$config_home/.dolphin-emu/Wii/Config/Dolphin.ini"
			sed -i "s|$gc4_state|SIDevice3 = 6|g" "$config_home/.dolphin-emu/Wii/Config/Dolphin.ini"

			# disable Wiimote with 0 value
			sed -i "s|PLAYER_SRC|$src|g" "$config_home/.dolphin-emu/Wii/Config/WiimoteNew.ini"
			;;
		
		esac
	done

}

gp_steam_control()
{

	# set Steam controls based on current controller type
	# note: $STEAM_GP_TYPE is set in rrs_gamepad
	# This function will also take care of if the user already has other
	# Settings defined for Steam, such as login information etc.
	# *Very early draft

	########################################################################
	##################### !!!!!!!!UNFINISHED!!!!!!!!!!!#####################
	########################################################################

	# Config.vdf file evaulation
	if [ ! -d "$home/.local/share/Steam/config/config.vdf" ]; then
		# copy existing user file to avoid reconfiguration
		cp -v "$home/.local/share/Steam/config/config.vdf" "$config_home/.local/share/Steam/config"

		# Now check if SDL Bindings are in place
		if grep -q grep "\bSDL_GamepadBind\b" "$config_home/.local/share/Steam/config/config.vdf"
			# ascertain current bindings to var
			then STEAM_GP_ORIG=$(grep "\bSDL_GamepadBind\b" "$config_home/.local/share/Steam/config/config.vdf")
		else
			# Bindings do not exist, fall back to skeleton file
			# Unfortunately, this means user must login again
			cp -v "$scriptdir/es-cfgs/extra/Steam/config.vdf" "$config_home/.local/share/Steam/config"
			# Set var to skeleton file place holder
			STEAM_GP_ORIG="SDL_BIND_TEMP"
		fi
	else
		# copy skeleton file instead
		# Unfortunately, this means user must login again
		cp -v "$scriptdir/es-cfgs/extra/Steam/config.vdf" "$config_home/.local/share/Steam/config"
		# Set var to skeleton file place holder
		STEAM_GP_ORIG="SDL_BIND_TEMP"
	fi

	# change controls
	# User can always set controls manually, but if we can make it easier for them
	# Let's make it happen :)
	case $STEAM_GP_TYPE in


		x360wireless)
			# set keybinding value
			STEAM_GP_NEW=$(<"$scriptdir/gamepad-cfgs/x360_wireless_controller/x360wireless_steam.txt")
			# change controller bindings
			sed -i "s|$STEAM_GP_ORIG|$STEAM_GP_NEW|g" "$config_home/.local/share/Steam/config/config.vdf"
			;;

		x360usb)
			# set keybinding value
			STEAM_GP_NEW=$(<"$scriptdir/gamepad-cfgs/x360_usb_controller/x360usb_steam.txt")
			# change controller bindings
			sed -i "s|$STEAM_GP_ORIG|$STEAM_GP_NEW|g" "$config_home/.local/share/Steam/config/config.vdf"
			;;

		ps3blu)
			# set keybinding value
			STEAM_GP_NEW=$(<"$scriptdir/gamepad-cfgs/ps3_blu_controller/ps3blu_steam.txt")
			# change controller bindings
			sed -i "s|$STEAM_GP_ORIG|$STEAM_GP_NEW|g" "$config_home/.local/share/Steam/config/config.vdf"
			# replace MAC address in keybinding file
			sed -i "s|steam_mac_tmp|$Steam_MAC_BLU|g" "$config_home/.local/share/Steam/config/config.vdf"
			;;

		ps3usb)
			# set keybinding value
			STEAM_GP_NEW=$(<"$scriptdir/gamepad-cfgs/ps3_usb_controller/ps3usb_steam.txt")
			# change controller bindings
			sed -i "s|$STEAM_GP_ORIG|$STEAM_GP_NEW|g" "$config_home/.local/share/Steam/config/config.vdf"
			;;

		generic_usb)
			# set keybinding value
			STEAM_GP_NEW=$(<"$scriptdir/gamepad-cfgs/ps3_usb_controller/generic_usb_steam.txt")
			# change controller bindings
			sed -i "s|$STEAM_GP_ORIG|$STEAM_GP_NEW|g" "$config_home/.local/share/Steam/config/config.vdf"
			;;
	esac		

}

